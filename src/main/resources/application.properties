#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect
#spring.datasource.platform=postgres
#spring.datasource.url=jdbc:postgresql://ec2-174-129-229-106.compute-1.amazonaws.com:5432/d46vg8k39hcgh3?ssl=true
#spring.datasource.username=dnvbrcylwfigve
#spring.datasource.password=f222f81e0e3717b5e81ec9a8e24e3b4ebf5cf897a4a77bcb7fe94abdc59d9e82

#spring.datasource.url=jdbc:postgresql://ec2-174-129-229-106.compute-1.amazonaws.com:5432/d46vg8k39hcgh3?user=dnvbrcylwfigve&f222f81e0e3717b5e81ec9a8e24e3b4ebf5cf897a4a77bcb7fe94abdc59d9e82=secret&ssl=true

#spring.datasource.url=jdbc:postgresql://ec2-174-129-229-106.compute-1.amazonaws.com:5432/d46vg8k39hcgh3?user=dnvbrcylwfigve&password=f222f81e0e3717b5e81ec9a8e24e3b4ebf5cf897a4a77bcb7fe94abdc59d9e82&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory

#spring.datasource.url=${JDBC_DATABASE_URL}
#spring.datasource.username=${JDBC_DATABASE_USERNAME}
#spring.datasource.password=${JDBC_DATABASE_PASSWORD}
#sudo docker run --name bd-postgres --network=postgres-network -e "POSTGRES_PASSWORD=postgres" -p 5432:5432 -v ~/PostgreSQL:/var/lib/postgresql/data -d postgres
#sudo docker start e36c2b80898938a585f107980f4ea76c4268dfb82b24d724d882caf54fceebb5

## default connection pool
spring.datasource.hikari.connectionTimeout=20000
spring.datasource.hikari.maximumPoolSize=5
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL9Dialect
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults = false

## PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/postgres
spring.datasource.username=postgres
spring.datasource.password=postgres

#drop n create table again, good for testing, comment this in production
spring.jpa.hibernate.ddl-auto=update

spring.jpa.show-sql=true
